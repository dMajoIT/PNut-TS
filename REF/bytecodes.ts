export enum Bytecodes {
  bc_drop = 0, // 0x00 main bytecodes
  bc_drop_push = 1, // 0x01
  bc_drop_trap = 2, // 0x02
  bc_drop_trap_push = 3, // 0x03
  bc_return_results = 4, // 0x04
  bc_return_args = 5, // 0x05
  bc_abort_0 = 6, // 0x06
  bc_abort_arg = 7, // 0x07
  bc_call_obj_sub = 8, // 0x08
  bc_call_obji_sub = 9, // 0x09
  bc_call_sub = 10, // 0x0a
  bc_call_ptr = 11, // 0x0b
  bc_call_recv = 12, // 0x0c
  bc_call_send = 13, // 0x0d
  bc_call_send_bytes = 14, // 0x0e
  bc_mptr_obj_sub = 15, // 0x0f
  bc_mptr_obji_sub = 16, // 0x10
  bc_mptr_sub = 17, // 0x11
  bc_jmp = 18, // 0x12
  bc_jz = 19, // 0x13
  bc_jnz = 20, // 0x14
  bc_tjz = 21, // 0x15
  bc_djnz = 22, // 0x16
  bc_pop = 23, // 0x17
  bc_pop_rfvar = 24, // 0x18
  bc_hub_bytecode = 25, // 0x19
  bc_case_fast_init = 26, // 0x1a
  bc_case_fast_done = 27, // 0x1b
  bc_case_value = 28, // 0x1c
  bc_case_range = 29, // 0x1d
  bc_case_done = 30, // 0x1e
  bc_lookup_value = 31, // 0x1f
  bc_lookdown_value = 32, // 0x20
  bc_lookup_range = 33, // 0x21
  bc_lookdown_range = 34, // 0x22
  bc_look_done = 35, // 0x23
  bc_add_pbase = 36, // 0x24
  bc_coginit = 37, // 0x25
  bc_coginit_push = 38, // 0x26
  bc_cogstop = 39, // 0x27
  bc_cogid = 40, // 0x28
  bc_locknew = 41, // 0x29
  bc_lockret = 42, // 0x2a
  bc_locktry = 43, // 0x2b
  bc_lockrel = 44, // 0x2c
  bc_lockchk = 45, // 0x2d
  bc_cogatn = 46, // 0x2e
  bc_pollatn = 47, // 0x2f
  bc_waitatn = 48, // 0x30
  bc_getrnd = 49, // 0x31
  bc_getct = 50, // 0x32
  bc_pollct = 51, // 0x33
  bc_waitct = 52, // 0x34
  bc_pinlow = 53, // 0x35
  bc_pinhigh = 54, // 0x36
  bc_pintoggle = 55, // 0x37
  bc_pinfloat = 56, // 0x38
  bc_wrpin = 57, // 0x39
  bc_wxpin = 58, // 0x3a
  bc_wypin = 59, // 0x3b
  bc_akpin = 60, // 0x3c
  bc_rdpin = 61, // 0x3d
  bc_rqpin = 62, // 0x3e
  bc_tasknext = 63, // 0x3f
  bc_unused = 64, // 0x40
  bc_debug = 65, // 0x41
  bc_con_rfbyte = 66, // 0x42
  bc_con_rfbyte_not = 67, // 0x43
  bc_con_rfword = 68, // 0x44
  bc_con_rfword_not = 69, // 0x45
  bc_con_rflong = 70, // 0x46
  bc_con_rfbyte_decod = 71, // 0x47
  bc_con_rfbyte_decod_not = 72, // 0x48
  bc_con_rfbyte_bmask = 73, // 0x49
  bc_con_rfbyte_bmask_not = 74, // 0x4a
  bc_setup_field_p = 75, // 0x4b
  bc_setup_field_pi = 76, // 0x4c
  bc_setup_reg = 77, // 0x4d
  bc_setup_reg_pi = 78, // 0x4e
  bc_setup_byte_pbase = 79, // 0x4f
  bc_setup_byte_vbase = 80, // 0x50
  bc_setup_byte_dbase = 81, // 0x51
  bc_setup_byte_pbase_pi = 82, // 0x52
  bc_setup_byte_vbase_pi = 83, // 0x53
  bc_setup_byte_dbase_pi = 84, // 0x54
  bc_setup_word_pbase = 85, // 0x55
  bc_setup_word_vbase = 86, // 0x56
  bc_setup_word_dbase = 87, // 0x57
  bc_setup_word_pbase_pi = 88, // 0x58
  bc_setup_word_vbase_pi = 89, // 0x59
  bc_setup_word_dbase_pi = 90, // 0x5a
  bc_setup_long_pbase = 91, // 0x5b
  bc_setup_long_vbase = 92, // 0x5c
  bc_setup_long_dbase = 93, // 0x5d
  bc_setup_long_pbase_pi = 94, // 0x5e
  bc_setup_long_vbase_pi = 95, // 0x5f
  bc_setup_long_dbase_pi = 96, // 0x60
  bc_setup_byte_pa = 97, // 0x61
  bc_setup_word_pa = 98, // 0x62
  bc_setup_long_pa = 99, // 0x63
  bc_setup_byte_pb_pi = 100, // 0x64
  bc_setup_word_pb_pi = 101, // 0x65
  bc_setup_long_pb_pi = 102, // 0x66
  bc_setup_struct_pbase = 103, // 0x67
  bc_setup_struct_vbase = 104, // 0x68
  bc_setup_struct_dbase = 105, // 0x69
  bc_setup_struct_pop = 106, // 0x6a
  bc_ternary = 107, // 0x6b
  bc_lt = 108, // 0x6c
  bc_ltu = 109, // 0x6d
  bc_lte = 110, // 0x6e
  bc_lteu = 111, // 0x6f
  bc_e = 112, // 0x70
  bc_ne = 113, // 0x71
  bc_gte = 114, // 0x72
  bc_gteu = 115, // 0x73
  bc_gt = 116, // 0x74
  bc_gtu = 117, // 0x75
  bc_ltegt = 118, // 0x76
  bc_lognot = 119, // 0x77
  bc_bitnot = 120, // 0x78
  bc_neg = 121, // 0x79
  bc_abs = 122, // 0x7a
  bc_encod = 123, // 0x7b
  bc_decod = 124, // 0x7c
  bc_bmask = 125, // 0x7d
  bc_ones = 126, // 0x7e
  bc_sqrt = 127, // 0x7f
  bc_qlog = 128, // 0x80
  bc_qexp = 129, // 0x81
  bc_shr = 130, // 0x82
  bc_shl = 131, // 0x83
  bc_sar = 132, // 0x84
  bc_ror = 133, // 0x85
  bc_rol = 134, // 0x86
  bc_rev = 135, // 0x87
  bc_zerox = 136, // 0x88
  bc_signx = 137, // 0x89
  bc_add = 138, // 0x8a
  bc_sub = 139, // 0x8b
  bc_logand = 140, // 0x8c
  bc_logxor = 141, // 0x8d
  bc_logor = 142, // 0x8e
  bc_bitand = 143, // 0x8f
  bc_bitxor = 144, // 0x90
  bc_bitor = 145, // 0x91
  bc_fge = 146, // 0x92
  bc_fle = 147, // 0x93
  bc_addbits = 148, // 0x94
  bc_addpins = 149, // 0x95
  bc_mul = 150, // 0x96
  bc_div = 151, // 0x97
  bc_divu = 152, // 0x98
  bc_rem = 153, // 0x99
  bc_remu = 154, // 0x9a
  bc_sca = 155, // 0x9b
  bc_scas = 156, // 0x9c
  bc_frac = 157, // 0x9d
  bc_string = 158, // 0x9e
  bc_bitrange = 159, // 0x9f
  bc_con_n = 160, // 0xa0
  bc_setup_reg_1D8_1F8 = 176, // 0xb0
  bc_setup_var_0_15 = 192, // 0xc0
  bc_setup_local_0_15 = 208, // 0xd0
  bc_read_local_0_15 = 224, // 0xe0
  bc_write_local_0_15 = 240, // 0xf0

  //
  // reset! counter resets to =0079
  //
  bc_set_incdec = 121, // 0x79 variable operator bytecodes
  bc_repeat_var_init_n = 122, // 0x7a
  bc_repeat_var_init_1 = 123, // 0x7b
  bc_repeat_var_init = 124, // 0x7c
  bc_repeat_var_loop = 125, // 0x7d
  bc_get_field = 126, // 0x7e
  bc_get_addr = 127, // 0x7f
  bc_read = 128, // 0x80
  bc_write = 129, // 0x81
  bc_write_push = 130, // 0x82
  bc_var_inc = 131, // 0x83
  bc_var_dec = 132, // 0x84
  bc_var_preinc_push = 133, // 0x85
  bc_var_predec_push = 134, // 0x86
  bc_var_postinc_push = 135, // 0x87
  bc_var_postdec_push = 136, // 0x88
  bc_var_lognot = 137, // 0x89
  bc_var_lognot_push = 138, // 0x8a
  bc_var_bitnot = 139, // 0x8b
  bc_var_bitnot_push = 140, // 0x8c
  bc_var_swap = 141, // 0x8d
  bc_var_rnd = 142, // 0x8e
  bc_var_rnd_push = 143, // 0x8f
  bc_lognot_write = 144, // 0x90
  bc_bitnot_write = 145, // 0x91
  bc_neg_write = 146, // 0x92
  bc_abs_write = 147, // 0x93
  bc_encod_write = 148, // 0x94
  bc_decod_write = 149, // 0x95
  bc_bmask_write = 150, // 0x96
  bc_ones_write = 151, // 0x97
  bc_sqrt_write = 152, // 0x98
  bc_qlog_write = 153, // 0x99
  bc_qexp_write = 154, // 0x9a
  bc_shr_write = 155, // 0x9b
  bc_shl_write = 156, // 0x9c
  bc_sar_write = 157, // 0x9d
  bc_ror_write = 158, // 0x9e
  bc_rol_write = 159, // 0x9f
  bc_rev_write = 160, // 0xa0
  bc_zerox_write = 161, // 0xa1
  bc_signx_write = 162, // 0xa2
  bc_add_write = 163, // 0xa3
  bc_sub_write = 164, // 0xa4
  bc_logand_write = 165, // 0xa5
  bc_logxor_write = 166, // 0xa6
  bc_logor_write = 167, // 0xa7
  bc_bitand_write = 168, // 0xa8
  bc_bitxor_write = 169, // 0xa9
  bc_bitor_write = 170, // 0xaa
  bc_fge_write = 171, // 0xab
  bc_fle_write = 172, // 0xac
  bc_addbits_write = 173, // 0xad
  bc_addpins_write = 174, // 0xae
  bc_mul_write = 175, // 0xaf
  bc_div_write = 176, // 0xb0
  bc_divu_write = 177, // 0xb1
  bc_rem_write = 178, // 0xb2
  bc_remu_write = 179, // 0xb3
  bc_sca_write = 180, // 0xb4
  bc_scas_write = 181, // 0xb5
  bc_frac_write = 182, // 0xb6
  bc_lognot_write_push = 183, // 0xb7
  bc_bitnot_write_push = 184, // 0xb8
  bc_neg_write_push = 185, // 0xb9
  bc_abs_write_push = 186, // 0xba
  bc_encod_write_push = 187, // 0xbb
  bc_decod_write_push = 188, // 0xbc
  bc_bmask_write_push = 189, // 0xbd
  bc_ones_write_push = 190, // 0xbe
  bc_sqrt_write_push = 191, // 0xbf
  bc_qlog_write_push = 192, // 0xc0
  bc_qexp_write_push = 193, // 0xc1
  bc_shr_write_push = 194, // 0xc2
  bc_shl_write_push = 195, // 0xc3
  bc_sar_write_push = 196, // 0xc4
  bc_ror_write_push = 197, // 0xc5
  bc_rol_write_push = 198, // 0xc6
  bc_rev_write_push = 199, // 0xc7
  bc_zerox_write_push = 200, // 0xc8
  bc_signx_write_push = 201, // 0xc9
  bc_add_write_push = 202, // 0xca
  bc_sub_write_push = 203, // 0xcb
  bc_logand_write_push = 204, // 0xcc
  bc_logxor_write_push = 205, // 0xcd
  bc_logor_write_push = 206, // 0xce
  bc_bitand_write_push = 207, // 0xcf
  bc_bitxor_write_push = 208, // 0xd0
  bc_bitor_write_push = 209, // 0xd1
  bc_fge_write_push = 210, // 0xd2
  bc_fle_write_push = 211, // 0xd3
  bc_addbits_write_push = 212, // 0xd4
  bc_addpins_write_push = 213, // 0xd5
  bc_mul_write_push = 214, // 0xd6
  bc_div_write_push = 215, // 0xd7
  bc_divu_write_push = 216, // 0xd8
  bc_rem_write_push = 217, // 0xd9
  bc_remu_write_push = 218, // 0xda
  bc_sca_write_push = 219, // 0xdb
  bc_scas_write_push = 220, // 0xdc
  bc_frac_write_push = 221, // 0xdd
  bc_setup_bfield_pop = 222, // 0xde
  bc_setup_bfield_rfvar = 223, // 0xdf
  bc_setup_bfield_0_31 = 224, // 0xe0

  //
  // reset! counter resets to =0054
  //
  bc_hubset = 84, // 0x54 hub bytecodes, miscellaneous (step by 2)
  bc_clkset = 86, // 0x56
  bc_read_clkfreq = 88, // 0x58
  bc_cogspin = 90, // 0x5a
  bc_cogchk = 92, // 0x5c
  bc_org = 94, // 0x5e
  bc_regexec = 96, // 0x60
  bc_regload = 98, // 0x62
  bc_call = 100, // 0x64
  bc_getregs = 102, // 0x66
  bc_setregs = 104, // 0x68
  bc_bytefill = 106, // 0x6a
  bc_bytemove = 108, // 0x6c
  bc_byteswap = 110, // 0x6e
  bc_bytecomp = 112, // 0x70
  bc_wordfill = 114, // 0x72
  bc_wordmove = 116, // 0x74
  bc_wordswap = 118, // 0x76
  bc_wordcomp = 120, // 0x78
  bc_longfill = 122, // 0x7a
  bc_longmove = 124, // 0x7c
  bc_longswap = 126, // 0x7e
  bc_longcomp = 128, // 0x80
  bc_strsize = 130, // 0x82
  bc_strcomp = 132, // 0x84
  bc_strcopy = 134, // 0x86
  bc_getcrc = 136, // 0x88
  bc_waitus = 138, // 0x8a
  bc_waitms = 140, // 0x8c
  bc_getms = 142, // 0x8e
  bc_getsec = 144, // 0x90
  bc_muldiv64 = 146, // 0x92
  bc_qsin = 148, // 0x94
  bc_qcos = 150, // 0x96
  bc_rotxy = 152, // 0x98
  bc_polxy = 154, // 0x9a
  bc_xypol = 156, // 0x9c
  bc_float = 158, // 0x9e hub bytecodes, floating point
  bc_trunc = 160, // 0xa0
  bc_round = 162, // 0xa2
  bc_fneg = 164, // 0xa4
  bc_fabs = 166, // 0xa6
  bc_fsqrt = 168, // 0xa8
  bc_fadd = 170, // 0xaa
  bc_fsub = 172, // 0xac
  bc_fmul = 174, // 0xae
  bc_fdiv = 176, // 0xb0
  bc_flt = 178, // 0xb2
  bc_fgt = 180, // 0xb4
  bc_fne = 182, // 0xb6
  bc_fe = 184, // 0xb8
  bc_flte = 186, // 0xba
  bc_fgte = 188, // 0xbc
  bc_nan = 190, // 0xbe
  bc_pinread = 192, // 0xc0 hub bytecodes, miscellaneous
  bc_pinwrite = 194, // 0xc2
  bc_pinstart = 196, // 0xc4
  bc_pinclear = 198, // 0xc6
  bc_taskspin = 200, // 0xc8
  bc_taskstop = 202, // 0xca
  bc_taskhalt = 204, // 0xcc
  bc_taskcont = 206, // 0xce
  bc_taskchk = 208, // 0xd0
  bc_taskid = 210, // 0xd2
  bc_task_return = 212, // 0xd4
  bc_orgh = 214 // 0xd6
}
